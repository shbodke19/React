{"ast":null,"code":"var _jsxFileName = \"/Users/sushilbalame/Desktop/React/my-apppp/my-apppp/src/Hooks/Effect/WidthM.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WidthM = () => {\n  _s();\n  const [widthc, setWidthC] = useState(0);\n  useEffect(() => {\n    setWidthC(() => {\n      return window.screen.availWidth;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"The Actual window size is : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: widthc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(WidthM, \"j9De/UdHeVqP8hE13TzTdDlMtlU=\");\n_c = WidthM;\nexport default WidthM;\nvar _c;\n$RefreshReg$(_c, \"WidthM\");","map":{"version":3,"names":["React","useEffect","useState","WidthM","widthc","setWidthC","window","screen","availWidth"],"sources":["/Users/sushilbalame/Desktop/React/my-apppp/my-apppp/src/Hooks/Effect/WidthM.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst WidthM = () => {\n  const [widthc, setWidthC] = useState(0);\n\n  useEffect(() => {\n    setWidthC(() => {\n      return window.screen.availWidth;\n    });\n  });\n  return (\n    <>\n      <h3>The Actual window size is : </h3>\n      <h4>{widthc}</h4>\n    </>\n  );\n};\n\nexport default WidthM;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEnD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACdI,SAAS,CAAC,MAAM;MACd,OAAOC,MAAM,CAACC,MAAM,CAACC,UAAU;IACjC,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqC,eACrC;MAAA,UAAKJ;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBAChB;AAEP,CAAC;AAAC,GAdID,MAAM;AAAA,KAANA,MAAM;AAgBZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}