{"ast":null,"code":"var _jsxFileName = \"/Users/sushilbalame/Desktop/React/my-apppp/my-apppp/src/Netflix/Netflix.js\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport Sdata from \"./Sdata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FavSeries = \"Netflix\";\nif (FavSeries === Netflix) {\n  /*#__PURE__*/_jsxDEV(Card, {\n    imgsrc: val.imgsrc,\n    title: val.title,\n    sname: val.sname,\n    links: val.links\n  }, Sdata[0].id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}\nconst Netflix = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading-style\",\n      children: \"List of TOP Most Webseries in Netflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), Sdata.map(val => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        imgsrc: val.imgsrc,\n        title: val.title,\n        sname: val.sname,\n        links: val.links\n      }, val.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n_c = Netflix;\nexport default Netflix;\nvar _c;\n$RefreshReg$(_c, \"Netflix\");","map":{"version":3,"names":["React","Card","Sdata","FavSeries","Netflix","val","imgsrc","title","sname","links","id","map"],"sources":["/Users/sushilbalame/Desktop/React/my-apppp/my-apppp/src/Netflix/Netflix.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\nimport Sdata from \"./Sdata\";\n\nconst FavSeries = \"Netflix\";\n\nif (FavSeries === Netflix) {\n  <Card\n    key={Sdata[0].id}\n    imgsrc={val.imgsrc}\n    title={val.title}\n    sname={val.sname}\n    links={val.links}\n  />;\n}\n\nconst Netflix = () => {\n  return (\n    <>\n      <h1 className=\"heading-style\">List of TOP Most Webseries in Netflix</h1>\n      {Sdata.map((val) => {\n        return (\n          <Card\n            key={val.id}\n            imgsrc={val.imgsrc}\n            title={val.title}\n            sname={val.sname}\n            links={val.links}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default Netflix;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC;AAAA;AAE5B,MAAMC,SAAS,GAAG,SAAS;AAE3B,IAAIA,SAAS,KAAKC,OAAO,EAAE;EACzB,qBAAC,IAAI;IAEH,MAAM,EAAEC,GAAG,CAACC,MAAO;IACnB,KAAK,EAAED,GAAG,CAACE,KAAM;IACjB,KAAK,EAAEF,GAAG,CAACG,KAAM;IACjB,KAAK,EAAEH,GAAG,CAACI;EAAM,GAJZP,KAAK,CAAC,CAAC,CAAC,CAACQ,EAAE;IAAA;IAAA;IAAA;EAAA,QAKhB;AACJ;AAEA,MAAMN,OAAO,GAAG,MAAM;EACpB,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,eAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2C,EACvEF,KAAK,CAACS,GAAG,CAAEN,GAAG,IAAK;MAClB,oBACE,QAAC,IAAI;QAEH,MAAM,EAAEA,GAAG,CAACC,MAAO;QACnB,KAAK,EAAED,GAAG,CAACE,KAAM;QACjB,KAAK,EAAEF,GAAG,CAACG,KAAM;QACjB,KAAK,EAAEH,GAAG,CAACI;MAAM,GAJZJ,GAAG,CAACK,EAAE;QAAA;QAAA;QAAA;MAAA,QAKX;IAEN,CAAC,CAAC;EAAA,gBACD;AAEP,CAAC;AAAC,KAjBIN,OAAO;AAmBb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}