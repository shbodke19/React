{"ast":null,"code":"var _jsxFileName = \"/Users/sushilbalame/Desktop/React/my-apppp/my-apppp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const count = useRef(0);\n  useEffect(() => {\n    count.current = count.current + 1;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Render Count: \", count.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"GaiDB+NGGpfcQPQqzjTvm9dC3ZY=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","ReactDOM","App","inputValue","setInputValue","count","current","e","target","value","root","createRoot","document","getElementById","render"],"sources":["/Users/sushilbalame/Desktop/React/my-apppp/my-apppp/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const count = useRef(0);\n\n  useEffect(() => {\n    count.current = count.current + 1;\n  });\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <h1>Render Count: {count.current}</h1>\n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,QAAQ,MAAM,kBAAkB;AAAC;AAAA;AAExC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMO,KAAK,GAAGL,MAAM,CAAC,CAAC,CAAC;EAEvBD,SAAS,CAAC,MAAM;IACdM,KAAK,CAACC,OAAO,GAAGD,KAAK,CAACC,OAAO,GAAG,CAAC;EACnC,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,KAAK,EAAEH,UAAW;MAClB,QAAQ,EAAGI,CAAC,IAAKH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC/C,eACF;MAAA,6BAAmBJ,KAAK,CAACC,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBACrC;AAEP;AAAC,GAlBQJ,GAAG;AAAA,KAAHA,GAAG;AAoBZ,MAAMQ,IAAI,GAAGT,QAAQ,CAACU,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eAAC,QAAC,GAAG;EAAA;EAAA;EAAA;AAAA,QAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}