{"ast":null,"code":"var _jsxFileName = \"/Users/sushilbalame/Desktop/React/my-apppp/my-apppp/src/Hooks/Memo/Memos.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Memos = () => {\n  _s();\n  const [myNum, setMyNum] = useState(0);\n  const [show, setShow] = useState(false);\n  const getValue = () => {\n    return setMyNum(myNum + 1);\n  };\n  const countNumber = num => {\n    console.log(\"ðŸš€ ~ file: Memo.jsx ~ line 12 ~ countNumber ~ num\", num);\n    for (let i = 0; i <= 1000000000; i++) {}\n    return num;\n  };\n\n  // subscribe to thapa technical\n\n  const checkData = useMemo(() => {\n    return countNumber(myNum);\n  }, [myNum]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getValue,\n      style: {\n        backgroundColor: \"red\"\n      },\n      children: \"Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" My new number : \", checkData, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShow(!show),\n      children: show ? \"You clicked me\" : \"Click me plz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Memos, \"exHQN5am0kQG2szK67Cd6/yi2Z4=\");\n_c = Memos;\nexport default Memos;\nvar _c;\n$RefreshReg$(_c, \"Memos\");","map":{"version":3,"names":["React","Memos","myNum","setMyNum","useState","show","setShow","getValue","countNumber","num","console","log","i","checkData","useMemo","backgroundColor"],"sources":["/Users/sushilbalame/Desktop/React/my-apppp/my-apppp/src/Hooks/Memo/Memos.js"],"sourcesContent":["import React from \"react\";\n\nconst Memos = () => {\n  const [myNum, setMyNum] = useState(0);\n  const [show, setShow] = useState(false);\n\n  const getValue = () => {\n    return setMyNum(myNum + 1);\n  };\n\n  const countNumber = (num) => {\n    console.log(\"ðŸš€ ~ file: Memo.jsx ~ line 12 ~ countNumber ~ num\", num);\n    for (let i = 0; i <= 1000000000; i++) {}\n    return num;\n  };\n\n  // subscribe to thapa technical\n\n  const checkData = useMemo(() => {\n    return countNumber(myNum);\n  }, [myNum]);\n\n  return (\n    <>\n      <button onClick={getValue} style={{ backgroundColor: \"red\" }}>\n        Counter\n      </button>\n      <p> My new number : {checkData} </p>\n      <button onClick={() => setShow(!show)}>\n        {show ? \"You clicked me\" : \"Click me plz\"}\n      </button>\n    </>\n  );\n};\n\nexport default Memos;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMG,QAAQ,GAAG,MAAM;IACrB,OAAOJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMM,WAAW,GAAIC,GAAG,IAAK;IAC3BC,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAEF,GAAG,CAAC;IACrE,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,UAAU,EAAEA,CAAC,EAAE,EAAE,CAAC;IACvC,OAAOH,GAAG;EACZ,CAAC;;EAED;;EAEA,MAAMI,SAAS,GAAGC,OAAO,CAAC,MAAM;IAC9B,OAAON,WAAW,CAACN,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEK,QAAS;MAAC,KAAK,EAAE;QAAEQ,eAAe,EAAE;MAAM,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEpD,eACT;MAAA,gCAAqBF,SAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACpC;MAAQ,OAAO,EAAE,MAAMP,OAAO,CAAC,CAACD,IAAI,CAAE;MAAA,UACnCA,IAAI,GAAG,gBAAgB,GAAG;IAAc;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA,gBACR;AAEP,CAAC;AAAC,GA/BIJ,KAAK;AAAA,KAALA,KAAK;AAiCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}